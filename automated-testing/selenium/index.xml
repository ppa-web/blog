<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>All Posts About Selenium Webdriver on CodingActions, Software, Automation, Testing, DevOps, RPA, Tools</title><link>https://codingactions.com/automated-testing/selenium/</link><description>Recent content in All Posts About Selenium Webdriver on CodingActions, Software, Automation, Testing, DevOps, RPA, Tools</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 Feb 2021 12:34:30 +0200</lastBuildDate><atom:link href="https://codingactions.com/automated-testing/selenium/index.xml" rel="self" type="application/rss+xml"/><item><title>Picking A Language (Java)| Selenium webdriver Java</title><link>https://codingactions.com/selenium-with-java-part-3-picking-a-language/</link><pubDate>Tue, 20 Dec 2022 11:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-java-part-3-picking-a-language/</guid><description>Selenium Java Programming Language This post (Picking A Language) is part of a series about Selenium WebDriver with Java .
In order to work well with Selenium you need to choose a programming language to write your automated acceptance tests in.</description></item><item><title>Defining A Test Strategy | Selenium webdriver Java</title><link>https://codingactions.com/selenium-with-java-part-2-defining-a-test-strategy/</link><pubDate>Wed, 14 Dec 2022 11:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-java-part-2-defining-a-test-strategy/</guid><description>This post (Defining A Test Strategy) is part of a series about Selenium WebDriver with Java .
A great way to increase your chances of success with automated web testing is to first map out a testing strategy.</description></item><item><title>Selenium webdriver with Java: Selenium In A Nutshell</title><link>https://codingactions.com/selenium-with-java-part-1-selenium-in-a-nutshell/</link><pubDate>Wed, 14 Dec 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-java-part-1-selenium-in-a-nutshell/</guid><description>This post is part of a series about Selenium WebDriver with Java .
Selenium is a software robot sent from the future to help us test web applications. But keep in mind that it&amp;rsquo;s not one of those fancy shape-shifting robots than can run really fast.</description></item><item><title>Selenium webdriver with Java: Table of Contents</title><link>https://codingactions.com/selenium-with-java-toc/</link><pubDate>Tue, 13 Dec 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-java-toc/</guid><description>This blog series steps through the process of writing Selenium WebDriver UI tests in Java from the first line of code through to running tests at scale in the cloud.
Selenium In A Nutshell Defining A Test Strategy Picking A Language</description></item><item><title>Automating Your Test Runs | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-15-automating-your-test-runs/</link><pubDate>Wed, 29 Jun 2022 13:22:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-15-automating-your-test-runs/</guid><description>This post (Automating Your Test Runs) is part of a series about Selenium WebDriver with Node.js .
You&amp;rsquo;ll probably get a lot of mileage out of your test suite in its current form if you just run things from your computer, look at the results, and tell people when there are issues.</description></item><item><title>Flexible Test Execution | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-14-flexible-test-execution/</link><pubDate>Sun, 26 Jun 2022 22:22:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-14-flexible-test-execution/</guid><description>This post (Flexible Test Execution) is part of a series about Selenium WebDriver with Node.js .
In order to get the most out of our tests we&amp;rsquo;ll want a way to break them up into relevant, targeted chunks.</description></item><item><title>Speeding Up Your Test Runs | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-13-speeding-up-your-test-runs/</link><pubDate>Fri, 24 Jun 2022 22:22:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-13-speeding-up-your-test-runs/</guid><description>This post (Speeding Up Your Test Runs) is part of a series about Selenium WebDriver with Node.js .
We&amp;rsquo;ve made huge strides by leveraging page objects, a base page object, explicit waits, and connecting our tests to Sauce Labs.</description></item><item><title>Running Browsers In The Cloud | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-12-running-browsers-in-the-cloud/</link><pubDate>Wed, 22 Jun 2022 15:22:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-12-running-browsers-in-the-cloud/</guid><description>This post (Running Browsers In The Cloud) is part of a series about Selenium WebDriver with Node.js .
If you&amp;rsquo;ve ever needed to test features in an older browser like Internet Explorer 9 or 10 then odds are you ran a virtual machine (VM) on your computer with a &amp;ldquo;legit&amp;rdquo; version of Windows.</description></item><item><title>Running A Different Browser Locally | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-11-running-a-different-browser-locally/</link><pubDate>Sat, 18 Jun 2022 13:42:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-11-running-a-different-browser-locally/</guid><description>This post (Running A Different Browser Locally) is part of a series about Selenium WebDriver with Node.js .
Now that we have some tests and page objects, we&amp;rsquo;ll want to start thinking about how to structure our test code to be more flexible.</description></item><item><title>Prepping For Use | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-10-prepping-for-use/</link><pubDate>Thu, 16 Jun 2022 13:42:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-10-prepping-for-use/</guid><description>This post (Prepping For Use) is part of a series about Selenium WebDriver with Node.js .
Now that we have some tests and page objects, we&amp;rsquo;ll want to start thinking about how to structure our test code to be more flexible.</description></item><item><title>Writing Really Re-usable Test Code | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-9-writing-really-re-usable-test-code/</link><pubDate>Sun, 12 Jun 2022 13:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-9-writing-really-re-usable-test-code/</guid><description>This post (Writing Really Re-usable Test Code) is part of a series about Selenium WebDriver with Node.js .
In the previous chapter we stepped through creating a simple page object to capture the behavior of the page we were interacting with.</description></item><item><title>Writing Re-usable Test Code | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-8-writing-re-usable-test-code/</link><pubDate>Sat, 11 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-8-writing-re-usable-test-code/</guid><description>This post (Writing Re-usable Test Code) is part of a series about Selenium WebDriver with Node.js .
One of the biggest challenges with Selenium tests is that they can be brittle and challenging to maintain over time.</description></item><item><title>Verifying Your Selenium Locators | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-7-verifying-your-locators/</link><pubDate>Fri, 10 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-7-verifying-your-locators/</guid><description>This post (Verifying Your Locators) is part of a series about Selenium WebDriver with Node.js .
If you&amp;rsquo;re fortunate enough to be working with unique IDs and Classes, then you&amp;rsquo;re usually all set. But when you have to handle more complex actions like traversing a page, or you need to run down odd test behavior, it can be a real challenge to verify that you have the right locators to accomplish what you want.</description></item><item><title>Writing Your First Test | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-6-writing-your-first-test/</link><pubDate>Thu, 09 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-6-writing-your-first-test/</guid><description>This post (Writing Your First Test) is part of a series about Selenium WebDriver with Node.js .
Fundamentally, Selenium works with two pieces of information &amp;ndash; the element on a page you want to use and what you want to do with it.</description></item><item><title>Anatomy Of A Good Acceptance Test | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-5-anatomy-of-a-good-acceptance-test/</link><pubDate>Tue, 07 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-5-anatomy-of-a-good-acceptance-test/</guid><description>This post (Anatomy Of A Good Acceptance Test) is part of a series about Selenium WebDriver with Node.js .
In order to write automated web tests that are easy to maintain, perform well, and are ultimately resilient there are some simple guidelines to follow:</description></item><item><title>A Programming Primer | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-4-a-programming-primer/</link><pubDate>Sun, 05 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-4-a-programming-primer/</guid><description>This post (A Programming Primer) is part of a series about Selenium WebDriver with Node.js .
This section will prime you with just enough programming concepts (and how they pertain to Selenium) so you have some working knowledge and a vocabulary.</description></item><item><title>Picking A Language (Javascript)| Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-3-picking-a-language/</link><pubDate>Sat, 04 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-3-picking-a-language/</guid><description>This post (Picking A Language) is part of a series about Selenium WebDriver with Node.js .
In order to work well with Selenium you need to choose a programming language to write your automated acceptance tests in.</description></item><item><title>Defining A Test Strategy | Selenium webdriver nodejs</title><link>https://codingactions.com/selenium-with-nodejs-part-2-defining-a-test-strategy/</link><pubDate>Fri, 03 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-2-defining-a-test-strategy/</guid><description>This post (Defining A Test Strategy) is part of a series about Selenium WebDriver with Node.js .
A great way to increase your chances of success with automated web testing is to first map out a testing strategy.</description></item><item><title>Selenium webdriver nodejs: Selenium In A Nutshell</title><link>https://codingactions.com/selenium-with-nodejs-part-1-selenium-in-a-nutshell/</link><pubDate>Thu, 02 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-part-1-selenium-in-a-nutshell/</guid><description>This post (Selenium In A Nutshell) is part of a series about Selenium WebDriver with Node.js .
Selenium is a software robot sent from the future to help us test web applications. But keep in mind that it&amp;rsquo;s not one of those fancy shape-shifting robots than can run really fast.</description></item><item><title>Selenium webdriver nodejs: Table of Contents</title><link>https://codingactions.com/selenium-with-nodejs-toc/</link><pubDate>Wed, 01 Jun 2022 08:38:30 +0200</pubDate><guid>https://codingactions.com/selenium-with-nodejs-toc/</guid><description>This blog series steps through the process of writing Selenium WebDriver UI tests in Node.js from the first line of code through to running tests at scale in the cloud.
Selenium In A Nutshell Defining A Test Strategy Picking A Language A Programming Primer Anatomy Of A Good Acceptance Test Writing Your First Test Verifying Your Locators Writing Re-usable Test Code Writing Really Re-usable Test Code Prepping For Use Running A Different Browser Locally Running Browsers In The Cloud Speeding Up Your Test Runs Flexible Test Execution Automating Your Test Runs</description></item></channel></rss>